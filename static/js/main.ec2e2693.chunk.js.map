{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","default","sortType","setSortType","isReversed","setIsReversed","sortedGoods","goods","resultGoods","sort","good1","good2","alphabetically","localeCompare","length","getGoods","visibleGoods","reverse","className","type","cn","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAoBKA,E,0EAfQC,EAAyB,CACpC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAKGD,K,qCAAAA,E,wBAAAA,E,YAAAA,M,KAML,IAqBaE,EAAgB,WAC3B,MAAgCC,mBAAmBH,EAASI,SAA5D,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAoCH,oBAAkB,GAAtD,mBAAOI,EAAP,KAAmBC,EAAnB,KAEMC,EAzBU,SAACC,EAAcL,GAC/B,IAAMM,EAAW,YAAOD,GAiBxB,OAfIL,GACFM,EAAYC,MAAK,SAACC,EAAOC,GACvB,OAAQT,GACN,KAAKL,EAASe,eACZ,OAAOF,EAAMG,cAAcF,GAE7B,KAAKd,EAASiB,OACZ,OAAOJ,EAAMI,OAASH,EAAMG,OAE9B,QACE,OAAO,MAKRN,EAOaO,CAASjB,EAAiBI,GACxCc,EAAeZ,EAAaE,EAAYW,UAAYX,EAE1D,OACE,sBAAKY,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UACEE,IACE,iBACA,CAAE,WAAYlB,IAAaL,EAASe,iBAGxCS,QAAS,kBAAMlB,EAAYN,EAASe,iBARtC,iCAaA,wBACEO,KAAK,SACLD,UACEE,IACE,oBACA,CAAE,WAAYlB,IAAaL,EAASiB,SAGxCO,QAAS,kBAAMlB,EAAYN,EAASiB,SARtC,4BAaA,wBACEK,KAAK,SACLD,UAAWE,IAAG,oBAAqB,CAAE,YAAahB,IAClDiB,QAAS,kBAAMhB,GAAeD,IAHhC,sBASGF,GAAYE,IACX,wBACEe,KAAK,SACLD,UAAU,4BACVG,QAAS,WACPlB,EAAYN,EAASI,SACrBI,GAAc,IALlB,sBAcN,6BACGW,EAAaM,KAAI,SAAAC,GAAI,OACpB,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YC1GlCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.ec2e2693.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport cn from 'classnames';\n\nexport const goodsFromServer: Goods = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype Goods = string[];\n\nenum SortType {\n  alphabetically = 'Sort alphabetically',\n  length = 'Sort by length',\n  default = '',\n}\n\nconst getGoods = ((goods: Goods, sortType: SortType) => {\n  const resultGoods = [...goods];\n\n  if (sortType) {\n    resultGoods.sort((good1, good2) => {\n      switch (sortType) {\n        case SortType.alphabetically:\n          return good1.localeCompare(good2);\n\n        case SortType.length:\n          return good1.length - good2.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  return resultGoods;\n});\n\nexport const App: React.FC = () => {\n  const [sortType, setSortType] = useState<SortType>(SortType.default);\n  const [isReversed, setIsReversed] = useState<boolean>(false);\n\n  const sortedGoods = getGoods(goodsFromServer, sortType);\n  const visibleGoods = isReversed ? sortedGoods.reverse() : sortedGoods;\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={\n            cn(\n              'button is-info',\n              { 'is-light': sortType !== SortType.alphabetically },\n            )\n          }\n          onClick={() => setSortType(SortType.alphabetically)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={\n            cn(\n              'button is-success',\n              { 'is-light': sortType !== SortType.length },\n            )\n          }\n          onClick={() => setSortType(SortType.length)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-warning', { 'is-light': !isReversed })}\n          onClick={() => setIsReversed(!isReversed)}\n        >\n          Reverse\n        </button>\n\n        {\n          (sortType || isReversed) && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={() => {\n                setSortType(SortType.default);\n                setIsReversed(false);\n              }}\n            >\n              Reset\n            </button>\n          )\n        }\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => (\n          <li data-cy=\"Good\" key={good}>{good}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}